require_relative('../aes')
include Aes

describe 'mult' do
  it 'computes correct value' do
    expect(mult(0x53, 0xCA)).to eq(0x01)
  end
end

describe 'divs' do
  it 'computes correct value' do
    q,r = div( 0b100011011, 0b1010011)
    expect(q).to eq(5)
    q,r = div(0b11111101111110, 0b100011011)
    expect(r).to eq(1)
  end
end

describe 'msb' do
  it 'computes correct value' do
    expect(msb(7)).to eq(2)
  end
end

describe 'inverts' do
  it 'computes correct value' do
    expect(inverse(0b1010011)).to eq(0b11001010)
  end
end

describe 'sbox' do
  it 'computes correct value' do
    expect(sbox(0x10)).to eq(0xca)
    expect(sbox(0x8a)).to eq(0x7e)
  end
end

describe 'rcon' do
  it 'computes correct value' do
    expect(rcon(3)).to eq(0x04)
    expect(rcon(9)).to eq(0x1b)
  end
end

describe 'expansion' do
  it 'computes correct value' do
    key =  [0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c]
    expect(key_expansion(key)[-4..-1]).to eq([0xb6, 0x63, 0x0c, 0xa6])
  end
end

describe 'shift_rows' do
  it 'computes correct value' do
    before = [
      0xd4, 0x27, 0x11, 0xae,
      0xe0, 0xbf, 0x98, 0xf1,
      0xb8, 0xb4, 0x5d, 0xe5,
      0x1e, 0x41, 0x52, 0x30,
    ]
    after = [
      0xd4, 0xbf, 0x5d, 0x30,
      0xe0, 0xb4, 0x52, 0xae,
      0xb8, 0x41, 0x11, 0xf1,
      0x1e, 0x27, 0x98, 0xe5
    ]

    expect(shift_rows(before)).to eq(after)
  end
end

describe 'mix_columns' do
  it 'computes correct value' do
    before = [
      0xd4, 0xbf, 0x5d, 0x30,
      0xe0, 0xb4, 0x52, 0xae,
      0xb8, 0x41, 0x11, 0xf1,
      0x1e, 0x27, 0x98, 0xe5
    ]
    after = [
      0x04, 0x66, 0x81, 0xe5,
      0xe0, 0xcb, 0x19, 0x9a,
      0x48, 0xf8, 0xd3, 0x7a,
      0x28, 0x06, 0x26, 0x4c,
    ]
    expect(mix_columns(before)).to eq(after)
  end
end

describe 'cipher' do
  it 'computes correct value' do
    bytes = [ 0x32, 0x43, 0xf6, 0xa8, 0x88, 0x5a, 0x30, 0x8d, 0x31, 0x31, 0x98, 0xa2, 0xe0, 0x37, 0x07, 0x34 ]
    key =  [ 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c]
    out = [0x39, 0x25, 0x84, 0x1d, 0x02, 0xdc, 0x09, 0xfb, 0xdc, 0x11, 0x85, 0x97, 0x19, 0x6a, 0x0b, 0x32]
    expect(cipher(bytes, key)).to eq(out)
  end
end
